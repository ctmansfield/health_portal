services:
  db:
    image: postgres:15
    container_name: hp_hapi_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hapi
      POSTGRES_USER: hapi
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hapi}
    volumes:
      - hp_pgdata:/var/lib/postgresql/data
    ports:
      - "55433:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U hapi -d hapi"]
      interval: 10s
      timeout: 5s
      retries: 30

  fhir:
    image: ${HAPI_IMAGE:-hapiproject/hapi:latest}
    container_name: hp_hapi_server
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # --- Postgres wiring (force Postgres, not H2) ---
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/hapi
      SPRING_DATASOURCE_USERNAME: hapi
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-hapi}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      # optional niceties
      HAPI_FHIR_SERVER_ADDRESS: http://localhost:8085/fhir
      HAPI_FHIR_IMPLEMENTATIONDESCRIPTION: Health Portal Local HAPI
    ports:
      - "8085:8080"
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8080/fhir/metadata >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 40

volumes:
  hp_pgdata:
